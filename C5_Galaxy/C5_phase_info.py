def mission_select(phase_select = str , Opt_mach = False , Opt_alt = False , Opt_mass = True , takeoff = False , landing = False , polynomial_control_order = 2 , num_segments = 3 , order = 3):

    phase_info_1 = {
            "pre_mission": {"include_takeoff": takeoff, "optimize_mass": Opt_mass},
            "climb_1": {
                "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
                "user_options": {
                    "optimize_mach": Opt_mach,
                    "optimize_altitude": Opt_alt,
                    "polynomial_control_order": polynomial_control_order,
                    "use_polynomial_control": True,
                    "num_segments": num_segments,
                    "order": order,
                    "solve_for_distance": False,
                    "initial_mach": (0.2, "unitless"),
                    "final_mach": (0.77, "unitless"),
                    "mach_bounds": ((0.18, 0.79), "unitless"),
                    "initial_altitude": (35.0, "ft"),
                    "final_altitude": (34000.0, "ft"),
                    "altitude_bounds": ((25.0, 34500.0), "ft"),
                    "throttle_enforcement": "path_constraint",
                    "fix_initial": True,
                    "constrain_final": False,
                    "fix_duration": False,
                    "initial_bounds": ((0.0, 0.0), "min"),
                    "duration_bounds": ((49.5, 148.5), "min"),
                },
                "initial_guesses": {"time": ([0, 99], "min")},
            },
            "cruise_1": {
                "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
                "user_options": {
                    "optimize_mach": Opt_mach,
                    "optimize_altitude": Opt_alt,
                    "polynomial_control_order": polynomial_control_order,
                    "use_polynomial_control": True,
                    "num_segments": num_segments,
                    "order": order,
                    "solve_for_distance": False,
                    "initial_mach": (0.77, "unitless"),
                    "final_mach": (0.77, "unitless"),
                    "mach_bounds": ((0.75, 0.79), "unitless"),
                    "initial_altitude": (34000.0, "ft"),
                    "final_altitude": (34000.0, "ft"),
                    "altitude_bounds": ((33500.0, 34500.0), "ft"),
                    "throttle_enforcement": "boundary_constraint",
                    "fix_initial": False,
                    "constrain_final": False,
                    "fix_duration": False,
                    "initial_bounds": ((49.5, 148.5), "min"),
                    "duration_bounds": ((51.0, 153.0), "min"),
                },
                "initial_guesses": {"time": ([99, 102], "min")},
            },
            "descent_1": {
                "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
                "user_options": {
                    "optimize_mach": Opt_mach,
                    "optimize_altitude": Opt_alt,
                    "polynomial_control_order": polynomial_control_order,
                    "use_polynomial_control": True,
                    "num_segments": num_segments,
                    "order": order,
                    "solve_for_distance": False,
                    "initial_mach": (0.77, "unitless"),
                    "final_mach": (0.2, "unitless"),
                    "mach_bounds": ((0.18, 0.79), "unitless"),
                    "initial_altitude": (34000.0, "ft"),
                    "final_altitude": (500.0, "ft"),
                    "altitude_bounds": ((0.0, 34500.0), "ft"),
                    "throttle_enforcement": "path_constraint",
                    "fix_initial": False,
                    "constrain_final": True,
                    "fix_duration": False,
                    "initial_bounds": ((100.5, 301.5), "min"),
                    "duration_bounds": ((49.0, 147.0), "min"),
                },
                "initial_guesses": {"time": ([201, 98], "min")},
            },
            "post_mission": {
                "include_landing": landing,
                "constrain_range": True,
                "target_range": (1934, "nmi"),
            },
        }
    
    phase_info_2 = {
        "pre_mission": {"include_takeoff": takeoff, "optimize_mass": Opt_mass},
        "climb_1": {
            "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
            "user_options": {
                "optimize_mach": Opt_mach,
                "optimize_altitude": Opt_alt,
                "polynomial_control_order": polynomial_control_order,
                "use_polynomial_control": True,
                "num_segments": num_segments,
                "order": order,
                "solve_for_distance": False,
                "initial_mach": (0.2, "unitless"),
                "final_mach": (0.5, "unitless"),
                "mach_bounds": ((0.18, 0.52), "unitless"),
                "initial_altitude": (35.0, "ft"),
                "final_altitude": (20000.0, "ft"),
                "altitude_bounds": ((25.0, 20500.0), "ft"),
                "throttle_enforcement": "path_constraint",
                "fix_initial": True,
                "constrain_final": False,
                "fix_duration": False,
                "initial_bounds": ((0.0, 0.0), "min"),
                "duration_bounds": ((49.0, 147.0), "min"),
            },
            "initial_guesses": {"time": ([0, 98], "min")},
        },
        "cruise_1": {
            "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
            "user_options": {
                "optimize_mach": Opt_mach,
                "optimize_altitude": Opt_alt,
                "polynomial_control_order": polynomial_control_order,
                "use_polynomial_control": True,
                "num_segments": num_segments,
                "order": order,
                "solve_for_distance": False,
                "initial_mach": (0.5, "unitless"),
                "final_mach": (0.5, "unitless"),
                "mach_bounds": ((0.48, 0.52), "unitless"),
                "initial_altitude": (20000.0, "ft"),
                "final_altitude": (20000.0, "ft"),
                "altitude_bounds": ((19500.0, 20500.0), "ft"),
                "throttle_enforcement": "boundary_constraint",
                "fix_initial": False,
                "constrain_final": False,
                "fix_duration": False,
                "initial_bounds": ((49.0, 147.0), "min"),
                "duration_bounds": ((26.0, 78.0), "min"),
            },
            "initial_guesses": {"time": ([98, 52], "min")},
        },
        "climb_2": {
            "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
            "user_options": {
                "optimize_mach": Opt_mach,
                "optimize_altitude": Opt_alt,
                "polynomial_control_order": polynomial_control_order,
                "use_polynomial_control": True,
                "num_segments": num_segments,
                "order": order,
                "solve_for_distance": False,
                "initial_mach": (0.5, "unitless"),
                "final_mach": (0.77, "unitless"),
                "mach_bounds": ((0.48, 0.79), "unitless"),
                "initial_altitude": (20000.0, "ft"),
                "final_altitude": (34000.0, "ft"),
                "altitude_bounds": ((19500.0, 34500.0), "ft"),
                "throttle_enforcement": "boundary_constraint",
                "fix_initial": False,
                "constrain_final": False,
                "fix_duration": False,
                "initial_bounds": ((75.0, 225.0), "min"),
                "duration_bounds": ((24.0, 72.0), "min"),
            },
            "initial_guesses": {"time": ([150, 48], "min")},
        },
        "cruise_2": {
            "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
            "user_options": {
                "optimize_mach": Opt_mach,
                "optimize_altitude": Opt_alt,
                "polynomial_control_order": polynomial_control_order,
                "use_polynomial_control": True,
                "num_segments": num_segments,
                "order": order,
                "solve_for_distance": False,
                "initial_mach": (0.77, "unitless"),
                "final_mach": (0.77, "unitless"),
                "mach_bounds": ((0.75, 0.79), "unitless"),
                "initial_altitude": (34000.0, "ft"),
                "final_altitude": (34000.0, "ft"),
                "altitude_bounds": ((33500.0, 34500.0), "ft"),
                "throttle_enforcement": "boundary_constraint",
                "fix_initial": False,
                "constrain_final": False,
                "fix_duration": False,
                "initial_bounds": ((99.0, 297.0), "min"),
                "duration_bounds": ((24.5, 73.5), "min"),
            },
            "initial_guesses": {"time": ([198, 49], "min")},
        },
        "descent_1": {
            "subsystem_options": {"core_aerodynamics": {"method": "computed"}},
            "user_options": {
                "optimize_mach": Opt_mach,
                "optimize_altitude": Opt_alt,
                "polynomial_control_order": polynomial_control_order,
                "use_polynomial_control": True,
                "num_segments": num_segments,
                "order": order,
                "solve_for_distance": False,
                "initial_mach": (0.77, "unitless"),
                "final_mach": (0.2, "unitless"),
                "mach_bounds": ((0.18, 0.79), "unitless"),
                "initial_altitude": (34000.0, "ft"),
                "final_altitude": (500.0, "ft"),
                "altitude_bounds": ((0.0, 34500.0), "ft"),
                "throttle_enforcement": "path_constraint",
                "fix_initial": False,
                "constrain_final": True,
                "fix_duration": False,
                "initial_bounds": ((123.5, 370.5), "min"),
                "duration_bounds": ((51.5, 154.5), "min"),
            },
            "initial_guesses": {"time": ([247, 103], "min")},
        },
        "post_mission": {
            "include_landing": landing,
            "constrain_range": True,
            "target_range": (1983, "nmi"),
        },
    }

    if phase_select == "mission1":
        return phase_info_1
    elif phase_select == "mission2":
        return phase_info_2
    else:
        raise ValueError("ERROR: The mission you selected was not recognized. Check the first argument of mission()")